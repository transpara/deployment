version: "3.9"
   
services:

  tstore-database:
    labels:
      - "Version=${TSTORE_TAG}"
      - "ID=${TSTORE_ID}"
    image: "transpara/tstore-database:${TSTORE_TAG}"
#    shm_size: '2gb'
    volumes:
      - tstore_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
      - PGPORT=5432
      - TSTUNE_PROFILE=promscale # this is the profile for timescaledb-tune to optimize postgres for promscale-like loads (wal size, buffers, etc)
    container_name: ${TSTORE_NAME}_db
    hostname: ${TSTORE_NAME}_db
    ports:
      - "${TSTORE_PORT}:5432"
    restart: unless-stopped


  tstore-pool:
    image: "bitnami/pgbouncer:1.22.1"
    environment:
      - POSTGRESQL_USERNAME=${POSTGRES_USER}
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}  
      - POSTGRESQL_HOST=${TSTORE_NAME}_db
      - POSTGRESQL_DATABASE=postgres
      - PGBOUNCER_PORT=6432
      # we will assume the following configuration here:
      # max_connections in postgress = 500
      # 8 workers for tstore_interface
      # db writes bypass pgbouncer, so we leave 6*8=48 connections for the writes, and we leave 20 connections to administrative tasks
      - PGBOUNCER_POOL_MODE=session #transaction pool mode does not work well with prepared statements which SQLAlchemy uses
      - PGBOUNCER_MAX_CLIENT_CONN=430 #global limit per user/database, in our case it should match the max_connections on DB side as we only use single user/db
      - PGBOUNCER_DEFAULT_POOL_SIZE=96 #assuming normal working 12 connections per each worker, 96 connections in total
      - PGBOUNCER_MIN_POOL_SIZE=16 # Assuming minimum 2 open connections per worker.
      - PGBOUNCER_RESERVE_POOL_SIZE=334 #Remaining between default and max.
      - PGBOUNCER_QUERY_WAIT_TIMEOUT=300
      - PGBOUNCER_MAX_DB_CONNECTIONS=430
    container_name: ${TSTORE_NAME}_pool
    hostname: ${TSTORE_NAME}_pool          
    restart: unless-stopped

networks:
   default:
      name: transpara
      external: true

volumes:
   tstore_data:
      name: tstore_db_data_${TSTORE_ID}
